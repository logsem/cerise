name: Test compilation

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [ build ]

    steps:

      - name: Get branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: get_branch

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: true

      - name: Try to restore opam cache
        id: opam-cache
        uses: actions/cache@v2
        with:
          path: "~/.opam"
          key: opam-${{ hashFiles('opam') }}

      - name: Install OCaml
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: 4.12.0

      - name: Install Coq and Iris
        run: |
          opam repo add coq-released https://coq.inria.fr/opam/released
          opam install . --deps-only -y

      - name: Build
        if: ${{ !contains(github.event.head_commit.message, '[skip build]') }}
        run: opam exec -- make ci -j $(nproc)

      - name: Build docs
        if: ${{ steps.get_branch.outputs.branch != 'journal' }}
        run: opam exec -- make html

      - name: Deploy docs (if main branch)
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ steps.get_branch.outputs.branch == 'main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./html
          destination_dir: dev

      - name: Deploy docs (if journal branch)
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ steps.get_branch.outputs.branch == 'journal' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./html
          destination_dir: journal

      - name: Deploy docs (if non-main branch)
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ (steps.get_branch.outputs.branch != 'main') || (steps.get_branch.outputs.branch != 'journal') }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./html
          destination_dir: branch/${{ steps.get_branch.outputs.branch }}
